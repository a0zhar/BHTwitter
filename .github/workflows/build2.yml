name: Build and Release BHTwitter22

on:
  workflow_dispatch:
    inputs:
      decrypted_ipa_url:
        description: "Direct URL of the decrypted Twitter ipa"
        default: ""
        required: true
        type: string
      deploy_format:
        description: "Deployment format"
        default: rootfull
        required: true
        type: choice
        options:
          - rootfull
          - sideloaded
          - trollstore
          - rootless
      commit_id:
        description: "(Optional) Commit ID to build at"
        default: ""
        required: false
        type: string
      upload_artifact:
        description: "Upload iPA as artifact (Public)"
        default: false
        required: false
        type: boolean
      create_release:
        description: "Create a draft release (Private)"
        default: true
        required: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build BHTwitter
    runs-on: macos-13
    permissions:
      contents: write

    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v4
        with:
          path: main
          ref: ${{ github.event.inputs.commit_id || github.ref }}
          submodules: recursive

      - name: Caching brew dependencies
        id: brew_cache
        uses: tecolicom/actions-use-homebrew-tools@v1.2
        with:
          tools: ldid dpkg make
          cache: yes

      - name: Install Dependencies
        if: steps.brew_cache.outputs.cache-hit != 'true'
        run: brew install ldid dpkg make

      - name: Set PATH environment variable
        run: echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH 

      - name: Setup Theos
        uses: actions/checkout@v4
        with:
          repository: theos/theos
          ref: master
          path: theos
          submodules: recursive
      
      - name: Caching SDK
        id: sdk_cache
        uses: actions/cache@v4
        env:
          cache-name: iOS-SDK
        with:
          path: theos/sdks/
          key: ${{ env.cache-name }}
      
      - name: Download iOS SDK
        if: steps.sdk_cache.outputs.cache-hit != 'true'
        run: |
          git clone -n --depth=1 --filter=tree:0 https://github.com/theos/sdks.git && cd sdks
          git sparse-checkout set --no-cone iPhoneOS.sdk
          git checkout
          mv *.sdk $THEOS/sdks
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Setup Theos Jailed
        uses: actions/checkout@v4
        with:
          repository: qnblackcat/theos-jailed
          ref: master
          path: theos-jailed
          submodules: recursive

      - name: Install Theos Jailed
        run: |
          ./theos-jailed/install
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Prepare Twitter IPA
        id: prepare_twitter
        run: |
          wget "$IPA_URL" --no-verbose -O main/packages/com.atebits.Tweetie2.ipa
          cd main
          unzip -q packages/com.atebits.Tweetie2.ipa -d tmp
          X_VERSION=$(defaults read "tmp/Payload/Twitter.app/Info" CFBundleVersion)
          echo "X_VERSION=${X_VERSION}" >> $GITHUB_ENV
          echo "Twitter Version: $X_VERSION"
        env:
          IPA_URL: ${{ inputs.decrypted_ipa_url }}

      - name: Get BHTwitter Version
        run: |
          BHTWITTER_VERSION=$(awk '/Version:/ {print $2}' main/control)
          echo "BHTWITTER_VERSION=${BHTWITTER_VERSION}" >> $GITHUB_ENV
          echo "BHTwitter Version: $BHTWITTER_VERSION"

      - name: Build BHTwitter
        run: |
          cd main
          ./build.sh --${{ inputs.deploy_format }}
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Rename IPA with Metadata
        run: |
          cd main/packages
          EXT=$([[ "${{ inputs.deploy_format }}" == "trollstore" ]] && echo "tipa" || echo "ipa")
          mv "$(ls -t | head -n1)" \
             "BHTwitter-${{ inputs.deploy_format }}_${{ env.BHTWITTER_VERSION }}_${{ env.X_VERSION }}.${EXT}"
          echo "package=$(ls -t | head -n1)" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        if: ${{ inputs.upload_artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: BHTwitter_${{ env.BHTWITTER_VERSION }}
          path: main/packages/${{ steps.package_name.outputs.package }}
          if-no-files-found: error

      - name: Create Draft Release
        if: ${{ inputs.create_release }}
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.BHTWITTER_VERSION }}
          name: v${{ env.BHTWITTER_VERSION }} - BHTwitter
          files: main/packages/${{ steps.package_name.outputs.package }}
          draft: true
